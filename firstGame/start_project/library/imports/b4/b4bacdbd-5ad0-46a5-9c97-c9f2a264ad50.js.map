{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "const Player = require('player');\nconst ScoreFX = require('scoreFX');\nconst Star = require('star');\n\nvar Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        scoreFXPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: Player\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        btnNode: {\n            default: null,\n            type: cc.Node\n        },\n        gameOverNode: {\n            default: null,\n            type: cc.Node\n        },\n        controlHintLabel: {\n            default: null,\n            type: cc.Label\n        },\n        keyboardHint: {\n            default: '',\n            multiline: true\n        },\n        touchHint: {\n            default: '',\n            multiline: true\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n\n        // store last star's x position\n        this.currentStar = null;\n        this.currentStarX = 0;\n\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n\n        // is showing menu or running game\n        this.isRunning = false;\n\n        // initialize control hint\n        var hintText = cc.sys.isMobile ? this.touchHint : this.keyboardHint;\n        this.controlHintLabel.string = hintText;\n\n        // initialize star and score pool\n        this.starPool = new cc.NodePool('star');\n        this.scorePool = new cc.NodePool('scoreFX');\n    },\n\n    onStartGame: function () {\n        // 初始化计分\n        this.resetScore();\n        // set game state to running\n        this.isRunning = true;\n        // set button and gameover text out of screen\n        this.btnNode.setPositionX(3000);\n        this.gameOverNode.active = false;\n        // reset player position and move speed\n        this.player.startMoveAt(cc.p(0, this.groundY));\n        // spawn star\n        this.spawnNewStar();\n    },\n\n    spawnNewStar: function() {\n        var newStar = null;\n        // 使用给定的模板在场景中生成一个新节点\n        if (this.starPool.size() > 0) {\n            newStar = this.starPool.get(this); // this will be passed to Star's reuse method\n        } else {\n            newStar = cc.instantiate(this.starPrefab);\n        }\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        // pass Game instance to star\n        newStar.getComponent('star').init(this);\n        // start star timer and store star reference\n        this.startTimer();\n        this.currentStar = newStar;\n    },\n\n    despawnStar (star) {\n        this.starPool.put(star);\n        this.spawnNewStar();\n    },\n\n    startTimer: function () {\n        // get a life duration for next star\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        // if there's no star, set a random x pos\n        if (!this.currentStar) {\n            this.currentStarX = cc.randomMinus1To1() * this.node.width/2;\n        }\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + cc.random0To1() * this.player.jumpHeight + 50;\n        // 根据屏幕宽度和上一个星星的 x 坐标，随机得到一个新生成星星 x 坐标\n        var maxX = this.node.width/2;\n        if (this.currentStarX >= 0) {\n            randX = -cc.random0To1() * maxX;\n        } else {\n            randX = cc.random0To1() * maxX;\n        }\n        this.currentStarX = randX;\n        // 返回星星坐标\n        return cc.p(randX, randY);\n    },\n\n    gainScore: function (pos) {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'score: ' + this.score.toString();\n        // 播放特效\n        var fx = this.spawnScoreFX();\n        this.node.addChild(fx.node);\n        fx.node.setPosition(pos);\n        fx.play();\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    resetScore: function () {\n        this.score = 0;\n        this.scoreDisplay.string = 'score: ' + this.score.toString();\n    },\n\n    spawnScoreFX: function () {\n        var fx;\n        if (this.scorePool.size() > 0) {\n            fx = this.scorePool.get();\n            return fx.getComponent('scoreFX');\n        } else {\n            fx = cc.instantiate(this.scoreFXPrefab).getComponent('scoreFX');\n            fx.init(this);\n            return fx;\n        }\n    },\n\n    despawnScoreFX (scoreFX) {\n        this.scorePool.put(scoreFX);\n    },\n\n    // called every frame\n    update: function (dt) {\n        if (!this.isRunning) return;\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    },\n\n    gameOver: function () {\n       this.gameOverNode.active = true;\n       this.player.enabled = false;\n       this.player.stopMove();\n       this.currentStar.destroy();\n       this.isRunning = false;\n       this.btnNode.setPositionX(0);\n    }\n});\n"
  ]
}